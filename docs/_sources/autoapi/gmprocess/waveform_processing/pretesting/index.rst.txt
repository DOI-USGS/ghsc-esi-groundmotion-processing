:py:mod:`gmprocess.waveform_processing.pretesting`
==================================================

.. py:module:: gmprocess.waveform_processing.pretesting

.. autoapi-nested-parse::

   Pretesting methods.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   gmprocess.waveform_processing.pretesting.min_sample_rate
   gmprocess.waveform_processing.pretesting.check_instrument
   gmprocess.waveform_processing.pretesting.check_free_field
   gmprocess.waveform_processing.pretesting.check_sta_lta
   gmprocess.waveform_processing.pretesting.check_max_amplitude
   gmprocess.waveform_processing.pretesting.max_traces



.. py:function:: min_sample_rate(st, min_sps=20.0, config=None)

   Discard records if the sample rate doers not exceed minimum.

   :param st: Stream of data.
   :type st: StationStream
   :param min_sps: Minimum samples per second.
   :type min_sps: float
   :param config: Configuration dictionary (or None). See get_config().
   :type config: dict

   :returns: Stream checked for sample rate criteria.
   :rtype: StationStream


.. py:function:: check_instrument(st, n_max=3, n_min=2, require_two_horiz=True, config=None)

   Test the channels of the station.

   The purpose of the maximum limit is to skip over stations with muliple
   strong motion instruments, which can occur with downhole or structural
   arrays since our code currently is not able to reliably group by location
   within an array.

   The purpose of the minimum and require_two_horiz checks are to ensure the
   channels are required for subsequent intensity measures such as ROTD.

   :param st: Stream of data.
   :type st: StationStream
   :param n_max: Maximum allowed number of streams; default to 3.
   :type n_max: int
   :param n_min: Minimum allowed number of streams; default to 1.
   :type n_min: int
   :param require_two_horiz: Require two horizontal components; default to `False`.
   :type require_two_horiz: bool
   :param config: Configuration dictionary (or None). See get_config().
   :type config: dict

   :returns: Stream with adjusted failed fields.


.. py:function:: check_free_field(st, reject_non_free_field=True, config=None)

   Checks free field status of stream.

   :param st: Stream of data.
   :type st: obspy.core.stream.Stream
   :param reject_non_free_field: Should non free-field stations be failed?
   :type reject_non_free_field: bool
   :param config: Configuration dictionary (or None). See get_config().
   :type config: dict

   :returns: Stream that has been checked for free field status.


.. py:function:: check_sta_lta(st, sta_length=1.0, lta_length=20.0, threshold=5.0, config=None)

   Checks that the maximum STA/LTA ratio for AT LEAST ONE of the stream's
   traces is above a certain threshold.

   :param st: Stream of data.
   :type st: obspy.core.stream.Stream
   :param sta_length: Length of time window for STA (seconds).
   :type sta_length: float
   :param lta_length: Length of time window for LTA (seconds).
   :type lta_length: float
   :param threshold: Required maximum STA/LTA ratio to pass the test.
   :type threshold: float
   :param config: Configuration dictionary (or None). See get_config().
   :type config: dict

   :returns: Stream that has been checked for sta/lta requirements.


.. py:function:: check_max_amplitude(st, min=5, max=2000000.0, config=None)

   Checks that the maximum amplitude of the traces in the stream are ALL
   within a defined range. Only applied to counts/raw data.

   :param st: Stream of data.
   :type st: obspy.core.stream.Stream
   :param min: Minimum amplitude for the acceptable range. Default is 5.
   :type min: float
   :param max: Maximum amplitude for the acceptable range. Default is 2e6.
   :type max: float
   :param config: Configuration dictionary (or None). See get_config().
   :type config: dict

   :returns: Stream that has been checked for maximum amplitude criteria.


.. py:function:: max_traces(st, n_max=3, config=None)

   Reject a stream if it has more than n_max traces.

   The purpose of this is to skip over stations with muliple strong motion
   instruments, which can occur with downhole or structural arrays since our
   code currently is not able to reliably group by location within an array.

   :param st: Stream of data.
   :type st: StationStream
   :param n_max: Maximum allowed number of streams; default to 3.
   :type n_max: int
   :param config: Configuration dictionary (or None). See get_config().
   :type config: dict

   :returns: Stream with adjusted failed fields.


