:py:mod:`gmprocess.waveform_processing.filtering`
=================================================

.. py:module:: gmprocess.waveform_processing.filtering


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   gmprocess.waveform_processing.filtering.highpass_filter
   gmprocess.waveform_processing.filtering.highpass_filter_trace
   gmprocess.waveform_processing.filtering.lowpass_filter
   gmprocess.waveform_processing.filtering.lowpass_filter_trace



.. py:function:: highpass_filter(st, frequency_domain=True, filter_order=5, number_of_passes=1, config=None)

   Highpass filter.

   :param st: Stream of data.
   :type st: StationStream
   :param frequency_domain: If true, use gmprocess frequency domain implementation; if false, use ObsPy
                            filters.
   :type frequency_domain: bool
   :param filter_order: Filter order.
   :type filter_order: int
   :param number_of_passes: Number of passes.
   :type number_of_passes: int
   :param config: Configuration dictionary (or None). See get_config().
   :type config: dict

   :returns: Filtered streams.
   :rtype: StationStream


.. py:function:: highpass_filter_trace(tr, frequency_domain=True, filter_order=5, number_of_passes=1, config=None)

   Highpass filter.

   :param tr: Stream of data.
   :type tr: StationTrace
   :param frequency_domain: If true, use gmprocess frequency domain implementation; if false, use ObsPy
                            filters.
   :type frequency_domain: bool
   :param filter_order: Filter order.
   :type filter_order: int
   :param number_of_passes: Number of passes.
   :type number_of_passes: int

   :returns: Filtered trace.
   :rtype: StationTrace


.. py:function:: lowpass_filter(st, frequency_domain=True, filter_order=5, number_of_passes=1, config=None)

   Lowpass filter.

   :param st: Stream of data.
   :type st: StationStream
   :param frequency_domain: If true, use gmprocess frequency domain implementation; if false, use ObsPy
                            filters.
   :type frequency_domain: bool
   :param filter_order: Filter order.
   :type filter_order: int
   :param number_of_passes: Number of passes.
   :type number_of_passes: int
   :param config: Configuration dictionary (or None). See get_config().
   :type config: dict

   :returns: Filtered streams.
   :rtype: StationStream


.. py:function:: lowpass_filter_trace(tr, frequency_domain, filter_order=5, number_of_passes=1, config=None)

   Lowpass filter.

   :param tr: Stream of data.
   :type tr: StationTrace
   :param frequency_domain: If true, use gmprocess frequency domain implementation; if false, use ObsPy
                            filters.
   :type frequency_domain: bool
   :param filter_order: Filter order.
   :type filter_order: int
   :param number_of_passes: Number of passes.
   :type number_of_passes: int
   :param config: Configuration dictionary (or None). See get_config().
   :type config: dict

   :returns: Filtered trace.
   :rtype: StationTrace


