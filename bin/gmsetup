#!/usr/bin/env python

import os
import shutil
import argparse
import pkg_resources
import logging

from gmprocess.constants import CONFIG_FILE, PICKER_FILE
from gmprocess.logging import setup_logger
from gmprocess.args import add_shared_args

CONFIG_FILES = [CONFIG_FILE, PICKER_FILE]


def main(args):
    setup_logger(args)
    logging.info("Running gmsetup.")

    home_path = os.path.expanduser("~")
    data_path = pkg_resources.resource_filename('gmprocess', 'data/')

    install_data_path_dict = {}

    for config in CONFIG_FILES:
        install_conf_path = os.path.join(home_path, CONFIG_FILE)
        data_conf_path = os.path.join(data_path, CONFIG_FILE.split('/')[1])
        install_data_path_dict[install_conf_path] = data_conf_path

    install_dir = os.path.join(home_path, ".gmprocess")
    if not os.path.exists(install_dir):
        os.makedirs(install_dir)

    # Do conf files already exist?
    for install_conf_path, data_conf_path in install_data_path_dict.items():
        if not os.path.exists(install_conf_path):
            # Copy from data dir
            logging.info("No existing config found, installing config file...")
            print('data_conf_path: %s' % data_conf_path)
            print('install_conf_path: %s' % install_conf_path)
            shutil.copy2(data_conf_path, install_conf_path)
        else:
            # Load installed config
            logging.warning('Existing config file found. Nothing to do.')


if __name__ == '__main__':
    description = 'Setup gmprocess config files.'
    parser = argparse.ArgumentParser(description=description)

    # Shared arguments
    parser = add_shared_args(parser)

    pargs = parser.parse_args()
    main(pargs)
