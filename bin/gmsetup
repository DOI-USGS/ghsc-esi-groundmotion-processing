#!/usr/bin/env python

import os
import shutil
import argparse
import pkg_resources
import logging
from configobj import ConfigObj

from gmprocess.logging import setup_logger
from gmprocess.args import add_shared_args


def main(args):
    setup_logger(args)
    logging.info("Running gmsetup.")

    home_path = os.path.expanduser("~")
    install_path = os.path.join(home_path, ".gmprocess")
    data_path = pkg_resources.resource_filename('gmprocess', 'data/')
    install_conf_path = os.path.join(install_path, 'gmprocess.conf')
    data_conf_path = os.path.join(data_path, 'gmprocess.conf')

    # Does the install dir exist?
    if not os.path.exists(install_path):
        os.makedirs(install_path)

    # Does a conf file already exist?
    if not os.path.exists(install_conf_path):
        # Copy from data dir
        logging.info("No existing config found, installing config file...")
        shutil.copy2(data_conf_path, install_conf_path)
    else:
        # Load installed config
        logging.info('Existing config file found, loading...')
        old_config = ConfigObj(install_conf_path)

        # Load data config file
        logging.info('Loading current config from source code...')
        new_config = ConfigObj(data_conf_path)

        # Merge (to retain any conf changes in install)
        logging.info(
            'Merging configs retaining settings in existing config...')
        new_config.merge(old_config)

        # Overwrite
        new_config.filename = install_conf_path
        new_config.write()


if __name__ == '__main__':
    description = 'Setup gmprocess config files.'
    parser = argparse.ArgumentParser(description=description)

    # Shared arguments
    parser = add_shared_args(parser)

    pargs = parser.parse_args()
    main(pargs)
